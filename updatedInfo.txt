-----------------------------------------
2020/08/06 Thu
ページ180のQEのインストールに関する訂正
-----------------------------------------

homebrewで配布されるgccコンパイラのバージョンが9から10に
変わったことから、ページ180にあるQEのコンパイル

    % make pwall
    
がうまくいかなくなってしまいました。そこで、以下では、
バージョン9のgccを使用しQEを正常にインストールする手段を説明します。
まず、バージョン9のgccをbrewでインストールします:

    % brew install gcc@9
    
次にcdコマンドで「/usr/local/bin」に移動し、中身をlsコマンドで確認し、
当該ディレクトリにgfortran、または、cppがある場合、それぞれrmコマンドで
削除します。そして以下のコマンドを実行します:

    % ln -s gfortran-9 gfortran
    % ln -s cpp-9 cpp
    
これはgfortran (fortran言語のコンパイラ)、および、cpp (c言語のプリプロセッサ)
コマンドを実行したときに、バージョン9のGCCで配布されているものが実行されるように
するためのコマンドです。「-v」オプションをつけて実行し、以下のようにバージョン
9.X (not 10.X) が表示されたら成功です:

    % gfortran -v
    ...
    gcc version 9.3.0 (Homebrew GCC 9.3.0) 

次に、mpichにバージョン9のgccコンパイラを使うことを
伝えるために以下のコマンドを実行します: 

    % export MPICH_CXX=g++-9
    % export MPICH_CC=gcc-9
    % export MPICH_FC=gfortran-9

また、インストールしたopenblasがコンパイル時に認識されるようにするために
以下のコマンドを実行します: 

    % export LD_LIBRARY_PATH=/usr/local/opt/openblas/lib/:$LD_LIBRARY_PATH

最後に、gitでダウンロードしたディレクトリ「q-e」に戻り、以下のコマンドを実行します:

    % make veryclean         <---- # 
    % ./configure FFLAGS=-l/usr/local/include 
    % make pwall

    (#: q-e上でまだ./configureを実行していない場合、当該コマンドを実行する必要はありません。
    ただし、実行しても問題ありません。これは、コンパイルを試みた過程で生じたファイルを削除
    するためのコマンドです。)

ここで注意ですが、exportコマンドの内容はターミナルを閉じると失われてしまうため、
exportからmakeまでを同一ターミナル内で完遂してください。もし閉じてしまった場合、
exportのところからやり直してください。
